//------------------------------------------------------------------------------
// <auto-generated>
//   Denna kod har genererats av ett verktyg.
//   Körtidsversion:4.0.30319.34209
//
//   Ändringar i denna fil kan orsaka fel och kommer att förloras om
//   koden återgenereras.
// </auto-generated>
//------------------------------------------------------------------------------
using System.Collections;
using UnityEngine;

namespace AssemblyCSharp
{

	public class WalkerAI : BaseAI
	{
		public float chaseSpeed = 10;
		public float moveSpeed = 5;

		private float lastDistance;

		public override void Awake ()
		{
			base.Awake ();
		}
		public override void AIUpdate ()
		{
			if (state != State.Moveing) {
				lastDistance = -1;
			}

			if (vision.CanSeePlayer ()) {
				ChangeState (State.Tracing);
				target = player.position;
				return;
			} else if (state == State.Tracing) {
				ForceChangeState (State.Alert);
			}
		}

		public override void Move ()
		{

			if (lastDistance == Vector3.Distance (target, transform.position) && lastDistance != -1) {
				ForceChangeState (State.Looking);
				lastDistance = -1;
				print ("Returned : " + lastDistance);
				return;
			}

			lastDistance = Vector3.Distance (target, transform.position);
			nav.speed = moveSpeed;

			if (!nav.hasPath)
				nav.SetDestination (target);

			if (Vector3.Distance (transform.position, target) < stoppingDistance || !nav.hasPath)
				ForceChangeState (State.Looking);
		}
		
		public override void Look ()
		{
			ForceChangeState (State.Passive);
		}
		
		public override void Passive ()
		{

		}
		
		public override void Trace ()
		{
			nav.speed = chaseSpeed;
			nav.SetDestination (target);
		}
	}
}

